{% extends 'base.html.twig' %}

{% block title %}Hello TestController!{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
          integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css">
{% endblock %}

{% block body %}


    <div class="container">
        <div id="users" class="card w-100 mt-5">
            <div class="card-header">Gebruikers</div>
            <div class="card-body">
                <button type="button" id="userRefresh">Refresh</button>
                <table id="userTable">
                </table>
            </div>
            <div class="card-header">Registration</div>
            <div class="card-body">
                <form method="POST" id="registrationForm">
                    <label for="registrationEmail">Email:</label>
                    <input class="form-control" type="text" id="registrationEmail"/>
                    <label for="registrationPassword1">Password:</label>
                    <input class="form-control" type="password" id="registrationPassword1"/>
                    <label for="registrationPassword2">Retype Password:</label>
                    <input class="form-control" type="password" id="registrationPassword2"/>
                    <input class="btn btn-success" type="submit" id="registrationSubmit">
                </form>
            </div>
            <div class="card-header">Activate</div>
            <div class="card-body">
                <form method="post" id="activateForm">
                    <label for="activateUser">User:</label>
                    <select id="activateUser" name="activateUser" class="form-control">
                    </select>
                    <input class="btn btn-success" type="submit" id="activateSubmit">
                </form>
            </div>
            <div class="card-header">Roles</div>
            <div class="card-body">
                <form method="post" id="changeRole">
                    <label for="roleUser">User:</label>
                    <select id="roleUser" name="roleUser" class="form-control">
                    </select>
                    <label for="roleRole">Role:</label>
                    <select id="roleRole" name="roleRole" class="form-control">
                        <option value="ROLE_USER">User</option>
                        <option value="ROLE_BEHEERDER">Beheerder</option>
                        <option value="ROLE_PENNINGMEESTER">Penningmeester</option>
                    </select>
                    <input class="btn btn-success" type="submit" id="roleSubmit">
                </form>
            </div>
        </div>
        <div id="strips" class="card w-100 mt-5">
            <div class="card-header">Strippenkaarten</div>
            <div class="card-body">
                <form method="get" id="getStrippen">
                    <select id="strippenDropdown" name="strippenDropdown" class="form-control">

                    </select>
                    <input value="Haal Strippenkaart op" class="btn btn-success" type="submit" id="getStrippen">
                </form>
            </div>
            <div class="card-header">update</div>
            <div class="card-body">
                <form method="post" id="updateStrippen">
                    <label for="strippenUpdateDropdown">User:</label>
                    <select id="strippenUpdateDropdown" name="strippenUpdateDropdown" class="form-control">

                    </select>
                    <label for="strippenChange">Change:</label>
                    <input type="number" id="strippenChange" name="strippenChange" class="form-control">
                    <input value="Update" class="btn btn-success" type="submit" id="updateStrippen">
                </form>
            </div>
        </div>
        <div id="requests" class="card w-100 mt-5">
            <div class="card-header">Betaal verzoeken</div>
            <div class="card-body">

            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function () {
            const baseUrl = "https://127.0.0.1:8000/api/v1/";

            $("#userRefresh").click(function (e) {
                console.log("userRefresh");
                getUserData();
            });

            $("#changeRole").submit(function (e) {
                e.preventDefault();

                changeRole();
            });

            $("#getStrippen").submit(function (e) {
                e.preventDefault();
                url = baseUrl + "stripcard/" + $("#strippenDropdown").val();
                let auth = 'Bearer ' + sessionStorage.getItem("accessToken");

                fetch(url, {
                    method: "GET",
                    headers: {
                        'Authorization': auth,
                        'Content-type': 'application/json'
                    },
                }).then(response => response.json())
                    .then(data => {
                        sessionStorage.setItem("accessToken", data.access_token);

                        console.log(data.data);
                    })
                    .catch(error => console.log(error));
            });

            $("#updateStrippen").submit(function (e) {
                e.preventDefault();
                url = baseUrl + "stripcard/" + $("#strippenDropdown").val();
                let auth = 'Bearer ' + sessionStorage.getItem("accessToken");
                $data = {"change": $("#strippenChange").val(), "user": $("#strippenUpdateDropdown").val()};

                fetch(url, {
                    method: "POST",
                    headers: {
                        'Authorization': auth,
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify($data)
                }).then(response => response.json())
                    .then(data => {
                        sessionStorage.setItem("accessToken", data.access_token);

                        console.log(data.data);
                    })
                    .catch(error => console.log(error));
            });

            $("#registrationForm").submit(function (e) {
                e.preventDefault();
                if ($("#registrationPassword1").val() === $("#registrationPassword2").val()) {
                    register($('#registrationEmail').val(), $("#registrationPassword1").val());
                }
            });

            $("#activateForm").submit(function (e) {
                e.preventDefault();
                activate();
            })

            const userTable = $("#userTable").DataTable({
                columns: [
                    {title: "ID", data: "id"},
                    {title: "Email", data: "email"},
                    {title: "Roles", data: "roles"},
                    {title: "Active.", data: "active"}
                ]
            });

            let getUserData = function () {
                let url = baseUrl + "user";
                let auth = 'Bearer ' + sessionStorage.getItem("accessToken");

                fetch(url, {
                    method: 'GET',
                    headers: {
                        'Authorization': auth,
                        'Content-type': 'application/json'
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        sessionStorage.setItem("accessToken", data.access_token);

                        console.log(data);
                        const responseData = Array.from(data.data);
                        console.log(responseData);
                        //add data to UserTable
                        userTable.clear();
                        userTable.rows.add(responseData);
                        userTable.draw();

                        //add data to userDropdown
                        const userDropdown = $('#activateUser');
                        const roleDropdown = $('#roleUser');
                        const strippenDropdown = $('#strippenDropdown');
                        const strippenUpdateDropdown = $('#strippenUpdateDropdown');

                        userDropdown.empty();
                        roleDropdown.empty();
                        strippenDropdown.empty();
                        strippenUpdateDropdown.empty();

                        $.each(responseData, function (key, value) {
                            userDropdown
                                .append($("<option></option>")
                                    .attr("value", value.id)
                                    .text(value.email));
                            roleDropdown
                                .append($("<option></option>")
                                    .attr("value", value.id)
                                    .text(value.email));
                            strippenDropdown
                                .append($("<option></option>")
                                    .attr("value", value.id)
                                    .text(value.email));
                            strippenUpdateDropdown
                                .append($("<option></option>")
                                    .attr("value", value.id)
                                    .text(value.email));
                        });
                    })
                    .catch((error) => {
                        console.log(error);
                    });
            }

            let register = function (email, password) {
                const url = baseUrl + "auth/register";
                let data = {
                    "email": email,
                    "password": password
                }
                fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-type": 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                    })
                    .catch((error) => {
                        console.log(error);
                    });
            }

            let activate = function () {
                const url = baseUrl + "auth/" + $('#activateUser').val() + "/activate";
                let auth = 'Bearer ' + sessionStorage.getItem("accessToken");

                fetch(url, {
                    method: "POST",
                    headers: {
                        'Authorization': auth
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        sessionStorage.setItem("accessToken", data.access_token);
                    })
                    .catch(error => console.log(error))
            }

            let changeRole = function () {
                const url = baseUrl + "user/" + $('#roleUser').val() + "/roles";
                let auth = 'Bearer ' + sessionStorage.getItem("accessToken");
                console.log(url);
                let value = $('#roleRole').val();
                let data = {
                    "role": value
                }
                fetch(url, {
                    method: "PATCH",
                    headers: {
                        'Authorization': auth
                    },
                    body: JSON.stringify(data)
                })
                    // .then(response => response.json())
                    .then(data => console.log(data))
                    .catch(error => console.log(error))
            }
        });
    </script>
{% endblock %}
