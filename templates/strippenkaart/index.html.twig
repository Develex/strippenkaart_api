{% extends 'base.html.twig' %}

{% block title %}Mijn Strippenkaart{% endblock %}

{% block body %}
    {% if user is not defined or user is null %}
        {% set user = 'collin.franckena001@fclive.nl' %}
    {% endif %}
    {% if strippen is not defined or user is null %}
        {% set strippen = '48' %}
        {% set gebruiktestrippen = '23' %}
    {% endif %}

    <div class="columns is-desktop">
        <div class="column is-5-desktop">
            <section class="hero">
                <div class="hero-body has-text-centered text">
                    <h1 class="title is-size-1-touch">Mijn Strippenkaart</h1>
                    <br/>
                    <p class="subtitle is-size-3-touch"><strong>Eigenaar Strippenkaart:</strong> <br/> {{ user }} </p>
                    <p class="subtitle is-size-3-touch"><strong>Aantal beschikbare strippen:</strong> <br/> {{ strippen }}</p>
                    <p class="subtitle is-size-3-touch"><strong>Totaal gebruikte strippen:</strong> <br/> {{ gebruiktestrippen }}</p>
                </div>
            </section>
        </div>
        <div class="column is-7-desktop">
            <figure class="image is-128x128 is-flex is-justify-content-center">
                <img src="{{ asset("./images/QR-code.png") }}" height="400" width="400"/>
            </figure>
{#            <img src="{{ asset("./images/logo-trans.png") }}" height="400" width="400"/>#}
        </div>
    </div>


    {#    <div class="columns"> #}
    {#        <div class="column is-flex-desktop"> #}
    {#            <section class="hero is-fullheight-with-navbar"> #}
    {#                <div class="hero-body has-text-centered is-flex-direction-column is-justify-content-center"> #}
    {#                    <h1 class="title">Mijn Strippenkaart</h1> #}
    {#                    <br/> #}
    {#                    <p class="subtitle"><strong>Eigenaar Strippenkaart:</strong> <br/> {{ user }} </p> #}
    {#                    <p class="subtitle"><strong>Aantal beschikbare strippen:</strong> <br/> {{ strippen }}</p> #}
    {#                    <p class="subtitle"><strong>Totaal gebruikte strippen:</strong> <br/> {{ gebruiktestrippen }}</p> #}
    {#                </div> #}
    {#            </section> #}
    {#        </div> #}
    {#        <div class="column is-flex-desktop"> #}
    {#            <section class="hero is-fullheight-with-navbar"> #}
    {#                <div class="hero-body is-justify-content-center"> #}
    {#                    <img src="{{ asset("./images/logo-trans.png") }}" height="400" width="400"/> #}
    {#                </div> #}
    {#            </section> #}
    {#        </div> #}
    {#    </div> #}
{% endblock %}

{% block javascript %}
{{ parent() }}

<script>
    $(document).ready(function () {
        const QRC = qrcodegen.QrCode;

        const qr0 = QRC.encodeText(user.id, QRC.Ecc.MEDIUM);
        const svg = toSvgString({qr : qr0, border : 4});
    });

    	// Returns a string of SVG code for an image depicting the given QR Code, with the given number
	// of border modules. The string always uses Unix newlines (\n), regardless of the platform.
	function toSvgString({qr, border, lightColor, darkColor}: { qr: qrcodegen.QrCode, border: number, lightColor: string, darkColor: string }): string {
		if (border < 0)
			throw "Border must be non-negative";
		let parts: Array<string> = [];
		for (let y = 0; y < qr.size; y++) {
			for (let x = 0; x < qr.size; x++) {
				if (qr.getModule(x, y))
					parts.push(`M${x + border},${y + border}h1v1h-1z`);
			}
		}
		return `<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 ${qr.size + border * 2} ${qr.size + border * 2}" stroke="none">
	<rect width="100%" height="100%" fill="${lightColor}"/>
	<path d="${parts.join(" ")}" fill="${darkColor}"/>
</svg>
`
		}
</script>
{% endblock %}